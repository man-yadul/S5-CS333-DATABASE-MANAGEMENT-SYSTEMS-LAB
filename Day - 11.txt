/*
11a. Write a MongoDB query to display all the documents in the collection restaurants. 
11b. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all the documents in the collection restaurant 
11c. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine, but exclude the field _id for all the documents in the collection restaurant. 
11d. Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but exclude the field _id for all the documents in the collection restaurant. 
*/

db.createCollection('restaurants')

db.restaurants.insertOne(
	{ 
		"address": { 
			"building": "1007", 
			"coord": [ -73.856077, 40.848447 ], 
			"street": "Morris Park Ave", 
			"zipcode": "10462" 
		}, 
		"borough": "Bronx", 
		"cuisine": "Bakery", 
		"grades": [ 
			{ "date": { "$date": 1393804800000 }, "grade": "A", "score": 2 }, 
			{ "date": { "$date": 1378857600000 }, "grade": "A", "score": 6 }, 
			{ "date": { "$date": 1358985600000 }, "grade": "A", "score": 10 }, 
			{ "date": { "$date": 1322006400000 }, "grade": "A", "score": 9 }, 
			{ "date": { "$date": 1299715200000 }, "grade": "B", "score": 14 } 
		], 
		"name": "Morris Park Bake Shop", 
		"restaurant_id": "30075445" 
	}
) 

-- 11a.
db.restaurants.find().pretty()

-- 11b.
db.restaurants.find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1}).pretty()

-- 11c.
db.restaurants.find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0}).pretty()

-- 11d.
db.restaurants.find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, "address.zipcode": 1, _id: 0}).pretty()
db.restaurants.find({}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, address: {zipcode: 1}, _id: 0}).pretty()